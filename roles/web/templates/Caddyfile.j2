{
	admin off
	debug

	log {
		output file /var/log/caddy/access.log {
			roll_size 10mb
			roll_keep 10
			roll_keep_for 168h
		}
		format console
		level INFO
	}
}

(serve_files) {
	try_files {path} {path}.html {path}/index.html {path}.default.html {path}/default.html
	file_server
}

(serve_errors) {
	handle_errors {
		@custom_err file /errors/{err.status_code}.html /errors/error.html
		handle @custom_err {
			rewrite * {file_match.relative}
			file_server
		}
		respond "{err.status_code} {err.status_text}"
	}
}

(common_config) {
	root * /var/www/html
	encode gzip

    # [internal|<email>] | [<cert_file> <key_file>]
    tls  {
        # protocols <min> [<max>]
        # ciphers   <cipher_suites...>
        # curves    <curves...>
        # alpn      <values...>
        # load      <paths...>
        # ca        <ca_dir_url>
        # ca_root   <pem_file>
        key_type rsa4096 # ed25519|p256|p384|rsa2048|rsa4096
        # dns       <provider_name> [<params...>]
        # propagation_timeout <duration>
        # propagation_delay   <duration>
        # dns_ttl             <duration>
        # dns_challenge_override_domain <domain>
        # resolvers <dns_servers...>
        # eab       <key_id> <mac_key>
        # on_demand
        # reuse_private_keys
        # client_auth {
        #     mode                   [request|require|verify_if_given|require_and_verify]
        #     trust_pool             <module>
        #     verifier 			   <module>
        # }
        # issuer          <issuer_name>  [<params...>]
        # get_certificate <manager_name> [<params...>]
        # insecure_secrets_log <log_file>
    }

}

{{ instance_name }} {
	import common_config

    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Frame-Options "DENY"
        X-Content-Type-Options "nosniff"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        -Server
        Content-Security-Policy "default-src 'self' https://github.com https://*.githubusercontent.com; script-src 'self' 'unsafe-inline' https://github.com; style-src 'self' 'unsafe-inline' https://github.com; img-src 'self' data: https:; frame-ancestors 'none'"
        Permissions-Policy "geolocation=(), midi=(), sync-xhr=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), fullscreen=(self), payment=()"
    }

    @protected_paths {
        path /authorities* /whats_that* /repos*
    }

    @cloudflare_ips remote_ip {{ cf_ipv4.content.split('\n') | join(' ') }} {{ cf_ipv6.content.split('\n') | join(' ') }}

	#handle @protected_paths {
	#	handle @cloudflare_ips {
	#		import serve_files
	#	}
	#	error 403
	#}

	handle {
		import serve_files
	}

    import serve_errors
}

{{ assets_name }} {
	import common_config

    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Content-Type-Options "nosniff"
        Referrer-Policy "strict-origin-when-cross-origin"
        -Server
    }

    @asset_paths {
        path /assets/* /errors/*
    }

	handle @asset_paths {
		import serve_files
	}

    handle {
        respond "Nothing to see here, go see my mate!" 404
    }

    import serve_errors
}

# vim: ai noet ts=4 sw=4
